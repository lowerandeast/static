{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/jackson/Documents/GitHub/static/src/utils/RouteActive.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRouter } from \"next/router\";\nimport PropTypes from \"prop-types\";\nimport Link from \"next/link\";\nimport React, { Children } from \"react\";\n\nvar RouteActive = function RouteActive(_ref) {\n  _s();\n\n  var children = _ref.children,\n      activeClassName = _ref.activeClassName,\n      props = _objectWithoutProperties(_ref, [\"children\", \"activeClassName\"]);\n\n  var _useRouter = useRouter(),\n      pathname = _useRouter.pathname;\n\n  var child = Children.only(children);\n  var childClassName = child.props.className || \"\";\n  var className = pathname === props.href ? \"\".concat(childClassName, \" \").concat(activeClassName).trim() : childClassName;\n  return /*#__PURE__*/_jsxDEV(Link, _objectSpread(_objectSpread({}, props), {}, {\n    children: /*#__PURE__*/React.cloneElement(child, {\n      className: className || null\n    })\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(RouteActive, \"QpP2vYJstxsDz0K+Qwttl8PPVoY=\", false, function () {\n  return [useRouter];\n});\n\n_c = RouteActive;\nRouteActive.propTypes = {\n  activeClassName: PropTypes.string.isRequired\n};\nexport default RouteActive;\n\nvar _c;\n\n$RefreshReg$(_c, \"RouteActive\");","map":{"version":3,"sources":["/Users/jackson/Documents/GitHub/static/src/utils/RouteActive.js"],"names":["useRouter","PropTypes","Link","React","Children","RouteActive","children","activeClassName","props","pathname","child","only","childClassName","className","href","trim","cloneElement","propTypes","string","isRequired"],"mappings":";;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA6C;AAAA;;AAAA,MAA1CC,QAA0C,QAA1CA,QAA0C;AAAA,MAAhCC,eAAgC,QAAhCA,eAAgC;AAAA,MAAZC,KAAY;;AAAA,mBAC3CR,SAAS,EADkC;AAAA,MACxDS,QADwD,cACxDA,QADwD;;AAEhE,MAAMC,KAAK,GAAGN,QAAQ,CAACO,IAAT,CAAcL,QAAd,CAAd;AACA,MAAMM,cAAc,GAAGF,KAAK,CAACF,KAAN,CAAYK,SAAZ,IAAyB,EAAhD;AAEA,MAAMA,SAAS,GAAGJ,QAAQ,KAAKD,KAAK,CAACM,IAAnB,GAA0B,UAAGF,cAAH,cAAqBL,eAArB,EAAuCQ,IAAvC,EAA1B,GAA0EH,cAA5F;AAEA,sBACC,QAAC,IAAD,kCAAUJ,KAAV;AAAA,2BACEL,KAAK,CAACa,YAAN,CAAmBN,KAAnB,EAA0B;AAC1BG,MAAAA,SAAS,EAAEA,SAAS,IAAI;AADE,KAA1B;AADF;AAAA;AAAA;AAAA;AAAA,WADD;AAOA,CAdD;;GAAMR,W;UACgBL,S;;;KADhBK,W;AAgBNA,WAAW,CAACY,SAAZ,GAAwB;AACvBV,EAAAA,eAAe,EAAEN,SAAS,CAACiB,MAAV,CAAiBC;AADX,CAAxB;AAIA,eAAed,WAAf","sourcesContent":["import { useRouter } from \"next/router\"\nimport PropTypes from \"prop-types\"\nimport Link from \"next/link\"\nimport React, { Children } from \"react\"\n\nconst RouteActive = ({ children, activeClassName, ...props }) => {\n\tconst { pathname } = useRouter()\n\tconst child = Children.only(children)\n\tconst childClassName = child.props.className || \"\"\n\n\tconst className = pathname === props.href ? `${childClassName} ${activeClassName}`.trim() : childClassName\n\n\treturn (\n\t\t<Link {...props}>\n\t\t\t{React.cloneElement(child, {\n\t\t\t\tclassName: className || null,\n\t\t\t})}\n\t\t</Link>\n\t)\n}\n\nRouteActive.propTypes = {\n\tactiveClassName: PropTypes.string.isRequired,\n}\n\nexport default RouteActive\n"]},"metadata":{},"sourceType":"module"}